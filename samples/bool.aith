module:

inline true = Λ@s : %stage => Λ<a : %type s> => λ!(x : a) => λ!(y : a) => x;

inline false = Λ@s : %stage => Λ<a : %type s> => λ!(x : a) => λ!(y : a) => y;

inline not = λ x : (∀@s : %stage => ∀<a:%type s> => !a -> !a -> a) {
	x @ %meta <∀@s : %stage => ∀<a:%type s> => !a -> !a -> a>(!false)(!true)
};

inline boolToFunction = λ x : (∀@s : %stage => ∀<a:%type s> => !a -> !a -> a) {
	Λ<b> => ξ %copy b {
		%function (b)(left : b, right : b){
			x @ %runtime %pointer <b>(!left)(!right)
		}
	}
};

function runtimeTrue = ~boolToFunction(true);
function runtimeNotTrue = ~boolToFunction(not(true));
