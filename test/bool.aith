module:

type bool = ``\/ s : _stage => `\/ a : _type s => !a -> !a -> a;

inline true = ``\s : _stage => `\a : _type s => \!(x : a) => \!(y : a) => x;

inline false = ``\s : _stage => `\a : _type s => \!(x : a) => \!(y : a) => y;

inline not = \ x : bool {
	x``(_meta)`(``\/s : _stage => `\/ a:_type s => !a -> !a -> a)(!false)(!true)
};

inline boolToFunction = \x : bool {
	`\b => _when _copy b {
		_function (left : b, right : b){
			x``(_runtime _pointer)`(b)(!left)(!right)
		}
	}
};

function runtimeTrue = ~boolToFunction(true);
function runtimeNotTrue = ~boolToFunction(not(true));
