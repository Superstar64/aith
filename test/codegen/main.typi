#$Copyright (C) 2015  Freddy Angel Cubas "Superstar64"
 Boost License
$#
alias size=uint_t.0;
of size variable;#auto variable=():size:;
of {size,size} variable2;#auto variable2=():{size,size}:;
of size[] arr;#auto arr=():size[];
auto str=(1,2);

auto fptr=${size} i{
	return i;
};

enum main=${} arg{
	variable=10;
	variable2=(1,2);
	auto i=if true then
		1
	else
		2
	;
	while {return.0 false;};
	
	auto ptr=new 0;
	*ptr = 10;
	auto ptrptr=&ptr;
	
	arr=new[10] 8:size;
	auto v3=1000:uint_t.2;
	variable2.1=-10;
	arr[2]=-12;
	fptr(arr[3]);
	
	auto math=4+4*5+9;
	math=math*math;
	of char[] val=new[10] '\0';
	auto sli=val[1..5];
	"abc";
	[1,2,3];
	
	auto strptr=&(str.1);
	(*strptr)=10;
	
	#auto heapstruct=new (0,1,'a','b');
	#this feature is temporarily removed
	#auto heapstructslice=heapstruct:{int_t.0,int_t.0,char}*;
	
	externTest("hello world");
	
	return 0;
};


enum externTest=extern "js" of ${}:char[] = 
"
function(arg){
	console.log(libtypi.typiStringtoJSString(arg));
}
";
