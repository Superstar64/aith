#/
 Copyright (C) 2020 Freddy Angel Cubas "Superstar64"
 Distributed under the Boost Software License, Version 1.0.
 (See accompanying file BSL.txt or copy at https://www.boost.org/LICENSE_1_0.txt)
/#

~ <a extends number & unrestricted> (& a(*), world &) -> world ~
increment = (x, os) {
	assign(x, *x + 1, os)
};

~ world -> world ~
heap pointer = os {
	(owner, |os|) = new(5: integer32, os);
	(pointer,|owner|) = owner.borrow;
	|os| = assert(*pointer == 5, os);
	|os| = increment(pointer, os);
	|os| = assert(*pointer == 6, os);
	|os| = assert(pointer == pointer, os);
	(a, |os|) = delete(owner, os);
	os
};

~ world -> world ~
array pointer = os {
	owner = [0,10,20] : integer32[!];
	(array,|owner|) = owner.borrow array;
	(index, |os|) = index address(array, 1, os);
	|os| = assert(array[1] == 10, os);
	|os| = increment(index, os);
	|os| = assert(array[1] == 11, os);
	(index1, |os|) = index address(array, 1, os);
	(index2, |os|) = index address(array, 2, os);
	|os| = assert(index == index1, os);
	|os| = assert(index != index2, os);
	() = owner.delete array;
	os
};

~ world -> world ~
record pointer = os {
	(owner, |os|) = new((4 : integer32,10 : integer32), os);
	(pair, |owner|) = owner.borrow;
	|os| = assert((*pair)_0 == 4, os);
	|os| = increment(pair&*_0, os);
	|os| = assert((*pair)_0 == 5, os);
	
	|os| = assert((*pair)_1 == 10, os);
	|os| = increment(pair&*_1, os);
	|os| = assert((*pair)_1 == 11, os);
	
	
	|os| = assert(pair&*_0 == pair&*_0, os);
	|os| = assert(pair&*_0 != pair&*_1, os);
	|os| = assert(pair == pair, os);
	(a, |os|) = delete(owner, os);
	os
};


~ world -> world ~
symbol main = os {
	|os| = os.heap pointer;
	|os| = os.array pointer;
	|os| = os.record pointer;
	os
};

~ (& boolean, world &) -> world ~
assert = extern "assert";
